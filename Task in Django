from django.http import JsonResponse
from django.shortcuts import redirect
from django.urls import reverse
from django.views import View
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import Flow
from googleapiclient.discovery import build


class GoogleCalendarInitView(View):
    def get(self, request):
        flow = Flow.from_client_config(
            client_config={
                'web': {
                    'client_id': 'YOUR_CLIENT_ID',
                    'client_secret': 'YOUR_CLIENT_SECRET',
                    'redirect_uris': [request.build_absolute_uri(reverse('google_calendar_redirect'))],
                    'auth_uri': 'https://accounts.google.com/o/oauth2/auth',
                    'token_uri': 'https://oauth2.googleapis.com/token',
                    'access_type': 'offline',
                    'prompt': 'consent',
                    'scope': ['https://www.googleapis.com/auth/calendar.events']
                }
            },
            scopes=['https://www.googleapis.com/auth/calendar.events']
        )
        authorization_url, state = flow.authorization_url()
        request.session['google_auth_state'] = state
        return redirect(authorization_url)


class GoogleCalendarRedirectView(View):
    def get(self, request):
        state = request.session.pop('google_auth_state', None)
        if not state:
            return JsonResponse({'error': 'State not found'})
        flow = Flow.from_client_config(
            client_config={
                'web': {
                    'client_id': 'YOUR_CLIENT_ID',
                    'client_secret': 'YOUR_CLIENT_SECRET',
                    'redirect_uris': [request.build_absolute_uri(reverse('google_calendar_redirect'))],
                    'auth_uri': 'https://accounts.google.com/o/oauth2/auth',
                    'token_uri': 'https://oauth2.googleapis.com/token',
                    'access_type': 'offline',
                    'prompt': 'consent',
                    'scope': ['https://www.googleapis.com/auth/calendar.events']
                }
            },
            scopes=['https://www.googleapis.com/auth/calendar.events'],
            state=state
        )
        try:
            flow.fetch_token(authorization_response=request.build_absolute_uri())
            credentials = flow.credentials
            service = build('calendar', 'v3', credentials=credentials)
            events_result = service.events().list(calendarId='primary', maxResults=10, singleEvents=True, orderBy='startTime').execute()
            events = events_result.get('items', [])
            return JsonResponse({'events': events})
        except Exception as e:
            return JsonResponse({'error': str(e)})
